(()=>{"use strict";var e={121:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.CarsApiService=void 0;const r=n(567),i=n(147);t.CarsApiService=class{static getAllCars(){return i.ApiService.get(r.Path.garage)}static createCar(e,t){return i.ApiService.post(r.Path.garage,e,t)}static getCar(e){return i.ApiService.get(`${r.Path.garage}/${e}`)}static deleteCar(e){return i.ApiService.delete(`${r.Path.garage}/${e}`)}static updateCar(e,t,n){return i.ApiService.put(`${r.Path.garage}/${e}`,t,n)}static getPagination(e,t){return i.ApiService.getPages(`${r.Path.garage}?_page=${e}&${t.key}=${t.value}`)}static onEnginCar(e,t){return i.ApiService.runEngine(`${r.Path.engine}?id=${e}&status=${t}`)}static onRunCar(e,t){return i.ApiService.runEngine(`${r.Path.engine}?id=${e}&status=${t}`)}}},147:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ApiService=void 0;class n{static async fetchRequest(e,t,n,r){const i=`${this.baseUrl}${e}`,s=await fetch(i,{method:t,body:n?JSON.stringify(n):null,headers:r});return await s.json()}static delete(e){return this.fetchRequest(e,"DELETE")}static get(e){return this.fetchRequest(e,"GET")}static post(e,t,n){return this.fetchRequest(e,"POST",t,n)}static put(e,t,n){return this.fetchRequest(e,"PUT",t,n)}static getPages(e){return this.fetchRequest(e,"GET")}static runEngine(e){return this.fetchRequest(e,"PATCH")}}t.ApiService=n,n.baseUrl="http://127.0.0.1:3000/"},116:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ApiWinnersService=void 0;const r=n(567),i=n(147);t.ApiWinnersService=class{static getAllWin(){return i.ApiService.get(r.Path.winners)}static createWin(e,t){return i.ApiService.post(r.Path.winners,e,t)}static getWin(e){return i.ApiService.get(`${r.Path.winners}/${e}`)}static deleteWin(e){return i.ApiService.delete(`${r.Path.winners}/${e}`)}static updateWin(e,t,n){return i.ApiService.put(`${r.Path.winners}/${e}`,t,n)}static getPagination(e,t){return i.ApiService.getPages(`${r.Path.winners}?_page=${e}&${t.key}=${t.value}`)}static sortWin(e,t){return i.ApiService.runEngine(`${r.Path.winners}?_sort=${e}&_order=${t}`)}}},77:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.App=void 0;const r=n(199),i=n(198),s=n(796),a=n(125),c=n(423);class o extends c.View{constructor(){super(...arguments),this.header=new r.Header(this.emitter),this.garage=new i.Garage(this.emitter),this.winners=new s.Winners(this.emitter),this.cars=new a.Cars(this.emitter),this.routes=[{title:"garage",url:"garage"},{title:"winners",url:"winners"}],this.routeElemetns=[this.garage,this.winners]}appendElement(e){this.wrapper=super.renderElement("div","main-wrapper"),e.append(this.wrapper),this.garage.appendElement(this.wrapper),this.cars.appendElement(this.garage.wrapper),this.emitter.subscribe("routeChanged",(e=>this.onChangeRoute(e))),this.header.appendElement(this.wrapper),this.winners.appendElement(this.wrapper)}onChangeRoute(e){const t=this.routeElemetns.find((t=>t.url===e.url)),n=this.routeElemetns.find((t=>t.url!==e.url));t?.show(),n?.hide()}}t.App=o},125:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Cars=void 0;const r=n(423),i=n(567),s=n(121),a=n(116),c={key:"_limit",value:7};class o extends r.View{constructor(e){super(e),this.emitter=e,this.currentPage=localStorage.getItem("currentPage")?Number(localStorage.getItem("currentPage")):1,this.getCars(this.currentPage),this.onSub(),this.getCarsQty()}async getCarsQty(){const e=await s.CarsApiService.getAllCars();this.qtyCars=e.length,this.carsNumbers.textContent=String(this.qtyCars)}async getCars(e=1){const t=(await fetch(`http://127.0.0.1:3000/garage?_page=${e}&_limit=${c.value}`,{method:"GET"})).headers.get("X-Total-Count");this.dataCars=await s.CarsApiService.getPagination(e,c),0===this.dataCars.length&&(this.currentPage=Number(t)/c.value<1?1:Math.round(Number(t)/c.value),this.dataCars=await s.CarsApiService.getPagination(this.currentPage,c)),this.pageNumbers.textContent=String(this.currentPage),this.renderCars(this.dataCars)}appendElement(e){this.carListWrapper=super.renderElement("div","cars-list-wrapper"),this.carsWrapper=super.renderElement("div","cars-pagination"),this.garageSubtitle=super.renderElement("h3","title",{textContent:"Garage #"}),this.carsNumbers=super.renderElement("span","title"),this.pageSubtitle=super.renderElement("h4","subtitle-page",{textContent:"Pages #"}),this.pageNumbers=super.renderElement("span","subtitle-page");const t=super.renderElement("div","page-wrapper");this.prevBtn=super.renderElement("button","prev-btn btn",{textContent:"prev"}),this.nextBtn=super.renderElement("button","next-btn btn",{textContent:"next"}),this.carsWrapper.append(this.garageSubtitle,t),t.append(this.pageSubtitle,this.prevBtn,this.nextBtn),this.garageSubtitle.append(this.carsNumbers),this.pageSubtitle.append(this.pageNumbers),e.append(this.carsWrapper),e.append(this.carListWrapper),this.nextBtn.addEventListener("click",this.nextPage.bind(this)),this.prevBtn.addEventListener("click",this.prevPage.bind(this))}renderCars(e){e.forEach((e=>{setTimeout((()=>{const t=super.renderElement("div","race-container",{id:e.id}),n=super.renderElement("div","car-container"),r=super.renderElement("div","row1"),i=super.renderElement("div","row2"),s=super.renderElement("div","engine-btn-box"),a=super.renderElement("button","select-btn btn",{textContent:"select"}),c=super.renderElement("button","remove-btn btn",{textContent:"remove"});this.startCar=super.renderElement("button","start-btn engine-btn",{textContent:"A"}),this.stopCar=super.renderElement("button","stop-btn engine-btn",{textContent:"B"}),this.carName=super.renderElement("h5","car-name",{textContent:e.name}),this.carImgBox=super.renderElement("div","car-img-box"),this.carImgBox.innerHTML='<svg version="1.0" xmlns="http://www.w3.org/2000/svg"\n    width="1280.000000pt" height="806.000000pt" viewBox="0 0 1280.000000 806.000000"\n    preserveAspectRatio="xMidYMid meet">\n   <g transform="translate(0.000000,806.000000) scale(0.100000,-0.100000)"\n   fill="000000"  stroke="none">\n   <path d="M6845 8050 c-38 -5 -135 -13 -215 -20 -376 -30 -754 -106 -1115 -225\n   -237 -78 -376 -135 -610 -250 -540 -265 -968 -577 -1441 -1050 -254 -254 -407\n   -428 -672 -765 -339 -431 -550 -614 -805 -698 -50 -17 -180 -49 -287 -72 -337\n   -73 -537 -140 -765 -258 -550 -286 -828 -748 -899 -1497 -43 -453 -46 -589\n   -16 -763 52 -304 149 -494 354 -697 122 -122 219 -193 364 -266 l95 -49 180 0\n   180 0 -7 55 c-29 250 -26 448 10 660 113 673 547 1258 1160 1564 908 453 1998\n   218 2641 -570 337 -413 518 -983 474 -1493 -6 -78 -14 -159 -18 -179 l-6 -37\n   1236 0 c680 0 1238 3 1240 7 2 5 -2 55 -9 113 -7 58 -13 163 -14 233 -2 974\n   661 1836 1602 2081 205 54 334 70 553 70 352 0 627 -62 940 -213 558 -270 973\n   -767 1138 -1361 54 -192 70 -318 71 -535 1 -110 -2 -233 -7 -273 l-7 -73 46\n   38 c69 57 177 185 255 301 152 227 241 473 286 792 30 215 22 415 -28 664 -81\n   402 -293 743 -598 963 -2 1 -5 47 -7 100 -4 169 -48 381 -144 698 -122 401\n   -246 659 -497 1028 -214 316 -498 666 -763 940 -102 106 -149 146 -256 216\n   -415 275 -1040 511 -1724 650 -358 73 -691 117 -1085 145 -121 9 -276 20 -345\n   26 -142 11 -381 11 -485 0z m60 -824 c210 -59 384 -203 475 -391 72 -148 73\n   -157 77 -580 5 -414 -7 -727 -32 -851 -30 -146 -100 -259 -189 -307 l-41 -22\n   -1540 -3 c-1145 -2 -1554 0 -1595 9 -121 25 -221 96 -261 182 -24 53 -25 172\n   -3 248 61 205 310 536 693 920 108 107 246 235 306 283 412 330 803 488 1305\n   530 25 2 203 2 395 1 294 -1 360 -4 410 -19z m2060 -91 c152 -34 435 -126 543\n   -176 388 -179 758 -565 982 -1024 146 -300 194 -533 139 -679 -28 -76 -99\n   -139 -186 -166 -63 -19 -92 -20 -991 -20 -924 0 -926 0 -970 21 -51 25 -93 79\n   -119 152 -17 49 -18 107 -18 877 l0 825 23 55 c39 95 78 128 180 151 109 25\n   261 19 417 -16z"/>\n   <path d="M3140 3569 c-718 -69 -1333 -583 -1536 -1285 -51 -174 -66 -310 -62\n   -529 5 -226 25 -344 85 -524 95 -285 238 -508 467 -728 279 -269 600 -421\n   1020 -482 174 -26 238 -26 412 0 355 52 606 152 866 346 343 255 590 642 678\n   1063 63 305 44 631 -55 928 -265 792 -1038 1292 -1875 1211z m359 -939 c201\n   -41 398 -169 516 -335 241 -339 213 -786 -69 -1082 -166 -175 -348 -260 -580\n   -271 -200 -8 -360 35 -517 139 -444 298 -515 911 -150 1302 199 213 506 308\n   800 247z"/>\n   <path d="M9871 3569 c-214 -24 -398 -77 -591 -170 -809 -390 -1201 -1314 -919\n   -2169 189 -575 685 -1030 1274 -1170 108 -26 346 -60 419 -60 81 0 330 37 441\n   65 706 179 1234 772 1330 1492 128 958 -528 1840 -1485 1998 -119 19 -358 27\n   -469 14z m319 -930 c350 -56 635 -330 705 -678 23 -112 16 -294 -15 -401 -67\n   -234 -235 -431 -455 -536 -141 -67 -196 -79 -370 -79 -175 0 -231 13 -371 80\n   -178 86 -313 221 -399 398 -67 139 -79 197 -80 367 0 153 10 210 59 332 107\n   263 365 470 648 517 75 12 202 13 278 0z"/>\n   </g>\n   </svg>\n   ',this.carImgBox.style.fill=e.color,this.flagImg=super.renderElement("div","flag"),t.append(n,this.flagImg),n.append(r,i),r.append(a,c,this.carName),i.append(s,this.carImgBox),s.append(this.startCar,this.stopCar),this.carListWrapper.append(t),a.addEventListener("click",this.onSelectCar.bind(this)),c.addEventListener("click",this.onRemoveCar.bind(this)),this.startCar.addEventListener("click",this.startOneEngin.bind(this)),this.stopCar.addEventListener("click",this.stopOneEngin.bind(this))}),10)}))}async onSelectCar(e){try{const t=this.getIdCar(e),n=await s.CarsApiService.getCar(t);t&&this.emitter.onEmit("onSelectedCar",n)}catch{console.log("😔 cannot select car")}}onSub(){this.emitter.subscribe("onUpdateCar",(e=>this.onUpdateCar(e))),this.emitter.subscribe("onCreatedCar",(()=>this.onCreatedCar())),this.emitter.subscribe("onStartRace",(()=>this.startRace())),this.emitter.subscribe("onStopRace",(()=>this.stopRace()))}async onRemoveCar(e){try{const t=this.getIdCar(e);if(t){const e=await s.CarsApiService.getCar(t);await s.CarsApiService.deleteCar(t),this.getCarsQty(),this.carListWrapper.innerHTML="",this.getCars(this.currentPage),this.emitter.onEmit("clearInputs"),this.emitter.onEmit("onRemove",e)}}catch{console.log("💣 cannot remove car")}}async onUpdateCar(e){try{if((await s.CarsApiService.getCar(e.id)).id){const t=document.getElementById(`${e.id}`)?.children[0].children[1].childNodes[1],n=document.getElementById(`${e.id}`)?.children[0].children[0].childNodes[2];t.style.fill=e.color,n.textContent=e.name,this.carsNumbers.textContent=String(this.qtyCars)}}catch{console.log("car is not exist")}}async onCreatedCar(){this.dataCars=await s.CarsApiService.getPagination(this.currentPage,c),this.carListWrapper.innerHTML="",this.renderCars(this.dataCars),this.getCarsQty()}async nextPage(){try{const e=this.qtyCars/c.value;this.currentPage<e?(this.nextBtn.disabled=!1,this.prevBtn.disabled=!1,this.currentPage+=1,localStorage.setItem("currentPage",String(this.currentPage)),this.pageNumbers.textContent=String(this.currentPage),this.carListWrapper.innerHTML="",this.getCars(this.currentPage)):this.nextBtn.disabled=!0}catch{console.log("👁️👁️cannot get next page")}}async prevPage(){try{const e=1;this.currentPage>e?(this.prevBtn.disabled=!1,this.nextBtn.disabled=!1,this.currentPage-=1,localStorage.setItem("currentPage",String(this.currentPage)),this.pageNumbers.textContent=String(this.currentPage),this.carListWrapper.innerHTML="",this.getCars(this.currentPage)):this.prevBtn.disabled=!0}catch{console.log("👁️👁️cannot get prev page")}}async startOneEngin(e,t){let n;try{const r=e?this.getIdCar(e):t,a=Date.now(),c=await s.CarsApiService.getCar(r),o=document.getElementById(`${r}`)?.children[0].children[1].childNodes[1],d=await s.CarsApiService.onEnginCar(r,i.Engine.started);e||this.disableButtons();const l=window.screen.width-this.flagImg.offsetLeft+this.flagImg.offsetWidth;let p=this.carImgBox.offsetLeft-this.carImgBox.offsetWidth+5;const h=window.screen.width-p-l,u=(h-p)/(50*d.velocity/1e3*60);this.emitter.subscribe("onStopCar",(()=>clearInterval(n))),n=setInterval((()=>{if(p+=u,p>=h){const t=Date.now();this.emitter.subscribe("onStopCar",(()=>clearInterval(n))),clearInterval(n),e||this.winnerTime||(this.winnerTime=+((t-a)/1e3).toFixed(2),this.addWinner(r,this.winnerTime,c.color,c.name),this.showWinMessage(r,c.name,this.winnerTime))}o.style.transform=`translateX(${p}px)`}),16);const g=fetch(`http://127.0.0.1:3000/engine?id=${r}&status=drive`,{method:"PATCH"});return g.then((e=>e.json())).catch((e=>new Error(e))),200!==(await g).status&&clearInterval(n),await g}catch(e){throw clearInterval(n),new Error("💥 Engine is broken")}}async stopOneEngin(e,t){try{this.activeteButtons();const n=e?this.getIdCar(e):t,r=document.querySelector(".start-race-btn");this.startCar.disabled=!1,r&&(r.disabled=!1),r.classList.remove("disabled"),this.startCar.classList.remove("disabled"),await s.CarsApiService.onEnginCar(n,i.Engine.stopped),this.emitter.onEmit("onStopCar");const a=document.getElementById(`${n}`)?.children[0].children[1].childNodes[1];a.style.transform="translateX(0px)"}catch{console.log("🤓 i was trying to stop car")}}getIdCar(e){const t=e.target.closest(".race-container");return Number(t?.id)}async startRace(){try{this.disableButtons();const e=[];(await s.CarsApiService.getPagination(this.currentPage,c)).forEach((async t=>{const n=await this.startOneEngin(void 0,t.id);200===n.status&&e.push(n)})),this.winnerTime=0}catch{console.log("🚗 cannot start race ")}}async stopRace(){try{(await s.CarsApiService.getPagination(this.currentPage,c)).forEach((e=>this.stopOneEngin(void 0,e.id))),this.activeteButtons()}catch{console.log("🤓 i was trying to stop rase")}}async addWinner(e,t,n,r){try{const i=(await a.ApiWinnersService.getAllWin()).find((t=>t.carId===e));if(i){console.log("winner update",e),i.wins+=1,i.time=i.time<=t?i.time:t;const n={name:r,wins:i.wins,time:i.time,color:i.color};await a.ApiWinnersService.updateWin(e,n,{"Content-Type":"application/json"})}else{const i={carId:e,time:t,wins:1,color:n,name:r};await a.ApiWinnersService.createWin(i,{"Content-Type":"application/json"})}this.emitter.onEmit("renderWinners")}catch{console.error("Winner is not found")}}showWinMessage(e,t,n){const r=super.renderElement("div","popup-wrapper"),i=super.renderElement("div","overlay"),s=super.renderElement("div","win-message",{textContent:`Car id#${e} ${t} is win with time ${n}s`});document.body.append(i),i.append(r),r.append(s);const a=setInterval((()=>{document.querySelector(".overlay")?document.body.removeChild(i):clearInterval(a)}),3e3)}disableButtons(){const e=document.querySelector(".start-race-btn");[...document.querySelectorAll(".start-btn")].forEach((e=>{e.disabled=!0,e.classList.add("disabled")})),e&&(e.disabled=!0),e.classList.add("disabled")}activeteButtons(){const e=document.querySelector(".start-race-btn");[...document.querySelectorAll(".start-btn")].forEach((e=>{e.disabled=!1,e.classList.remove("disabled")})),e&&(e.disabled=!1),e.classList.remove("disabled")}}t.Cars=o},504:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.EventEmitter=void 0,t.EventEmitter=class{constructor(){this.subscriberMap=new Map}subscribe(e,t){const n=this.subscriberMap.get(e)||[];this.subscriberMap.has(e)?this.subscriberMap.set(e,[...n,t]):this.subscriberMap.set(e,[t])}unsubscribe(e,t){const n=this.subscriberMap.get(e)||[];this.subscriberMap.has(e)&&this.subscriberMap.set(e,n.filter((e=>e!==t)))}onEmit(e,t){const n=this.subscriberMap.get(e);n&&n.forEach((e=>e(t)))}}},198:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Garage=void 0;const r=n(919),i=n(121),s=n(992),a=n(956);class c extends r.RouteElement{constructor(){super(...arguments),this.url="garage"}async appendElement(e){super.render(e),this.createBtn=super.renderElement("button","create-btn btn",{textContent:"create"}),this.updateBtn=super.renderElement("button","update-btn btn",{textContent:"update"}),this.createInput=super.renderElement("select","create-input input"),this.generateModels(),this.updateInput=super.renderElement("input","update-input input"),this.createPicker=super.renderElement("input","create-picker picker",{type:"color"}),this.updatePicker=super.renderElement("input","uodate-picker picker",{type:"color"}),this.startBtn=super.renderElement("button","start-race-btn btn",{textContent:"start"}),this.stopBtn=super.renderElement("button","stop-btn btn",{textContent:"stop"}),this.generateBtn=super.renderElement("button","update-btn btn",{textContent:"generate cars"});const t=super.renderElement("div","controllers-wrapper"),n=super.renderElement("div","create-container garage-input-container"),r=super.renderElement("div","update-container garage-input-container");this.updateInput.disabled=!0,this.updatePicker.disabled=!0,this.updateBtn.disabled=!0;const i=super.renderElement("div","controller-container garage-input-container");this.wrapper.append(t),t.append(n,r,i),n.append(this.createInput,this.createPicker,this.createBtn),r.append(this.updateInput,this.updatePicker,this.updateBtn),i.append(this.startBtn,this.stopBtn,this.generateBtn),this.onUpdateNameCar(),this.updateBtn.addEventListener("click",this.getUpdatedCar.bind(this)),this.createBtn.addEventListener("click",this.onCreateCar.bind(this)),this.generateBtn.addEventListener("click",this.onGenerateCars.bind(this)),this.startBtn.addEventListener("click",this.startRace.bind(this)),this.stopBtn.addEventListener("click",this.stopRace.bind(this)),this.emitter.subscribe("clearInputs",(()=>this.clearInputs()))}onUpdateNameCar(){this.emitter.subscribe("onSelectedCar",(e=>this.updateCar(e)))}updateCar(e){e&&(this.currentUpdateCar=e,console.log("some",e),this.updateInput.value=e.name,this.updatePicker.value=e.color,this.disabledUpdate(!1))}disabledUpdate(e){this.updateInput.disabled=e,this.updatePicker.disabled=e,this.updateBtn.disabled=e}async getUpdatedCar(){try{const{id:e}=this.currentUpdateCar,t={name:this.updateInput.value,color:this.updatePicker.value};await i.CarsApiService.updateCar(e,t,{"Content-Type":"application/json"});const n=await i.CarsApiService.getCar(e);n.id&&this.emitter.onEmit("onUpdateCar",n),this.updateInput.value="",this.updatePicker.value="#000000",this.disabledUpdate(!0)}catch{console.log("car is not exist")}}async onCreateCar(){const e={name:this.createInput.value?this.createInput.value:(0,s.createCarName)(),color:this.createPicker.value},t=await i.CarsApiService.createCar(e,{"Content-Type":"application/json"});this.emitter.onEmit("onCreatedCar",t),this.createInput.value="",this.createPicker.value="#000000"}async onGenerateCars(){try{const e=(await i.CarsApiService.getAllCars()).length-1,t=new Array(100).fill("0").map((async()=>{const e={name:(0,s.createCarName)(),color:(0,a.setCarColor)()};return await i.CarsApiService.createCar(e,{"Content-Type":"application/json"}),e}));console.log(t,e);const n=await i.CarsApiService.getAllCars();this.emitter.onEmit("onCreatedCar",n.slice(e+1))}catch{console.log("🫠 cannot generate cars")}}clearInputs(){this.createInput.value="",this.createPicker.value="#000000",this.updateInput.value="",this.updatePicker.value="#000000"}generateModels(){const e=(0,s.selectCarName)();e.unshift(""),e.forEach((e=>{const t=document.createElement("option");t.setAttribute("value",e),t.textContent=e,this.createInput.append(t)}))}startRace(){this.emitter.onEmit("onStartRace")}stopRace(){this.emitter.onEmit("onStopRace")}}t.Garage=c},199:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Header=void 0;const r=n(423);class i extends r.View{constructor(){super(...arguments),this.navElements=[],this.routes=[{title:"garage",url:"garage"},{title:"winners",url:"winners"}]}appendElement(e){const t=super.renderElement("header","header"),n=super.renderElement("h1","heading",{textContent:"async-Race"}),r=super.renderElement("div","header-content"),i=super.renderElement("nav","nav");this.subtitle=super.renderElement("h2","subtitle",{textContent:"async-Race"});const s=super.renderElement("div","header__text-wrappter");e.append(t),t.append(n,s,r),r.append(this.subtitle,i),this.routes.forEach((e=>{const t=super.renderElement("a",`${e.title}-link nav-link`,{textContent:e.title});t.setAttribute("url",e.url),this.navElements.push(t),i.append(t)})),this.onChangeRoute(this.routes[0]),i.addEventListener("click",this.changeRoute.bind(this))}onChangeRoute(e){this.subtitle.innerHTML=e.title,this.emitter.onEmit("routeChanged",e)}changeRoute(e){const t=e.target.getAttribute("url"),n=this.routes.find((e=>e.url===t));n&&this.onChangeRoute(n)}}t.Header=i},919:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.RouteElement=void 0;const r=n(423);class i extends r.View{constructor(){super(...arguments),this.isShow=!1}render(e){this.parent=e,this.wrapper=document.createElement("section"),this.wrapper.className=`${this.url}-wrapper`,this.wrapper.setAttribute("url",this.url)}show(){this.isShow||(this.isShow=!0,this.parent.appendChild(this.wrapper))}hide(){this.isShow&&(this.isShow=!1,this.parent.removeChild(this.wrapper))}}t.RouteElement=i},992:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.selectCarName=t.createCarName=t.models=t.brand=void 0,t.brand=["Audi","Beta Julieta","BMW","Citroen","Infiniti","Jeep","Kia","Lexus","Nissan","Opel","Volvo"],t.models=["A4","X2","CEED","CERATO","RIO","GENESIS","GETZ","GRANDEUR","MATRIX","XCENT","Alfa Romeo"],t.createCarName=()=>{const e=Math.floor(Math.random()*t.models.length),n=Math.floor(Math.random()*t.brand.length);return`${t.brand[n]} ${t.models[e]} `},t.selectCarName=()=>Array(6).fill("").map((()=>`${t.brand[Math.floor(Math.random()*t.brand.length)]} ${t.models[Math.floor(Math.random()*t.models.length)]}`)),console.log()},956:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.setCarColor=void 0;const n=()=>{const e=Math.floor(255*Math.random()).toString(16);return 2===e.length?e:e.padStart(2,"0")};t.setCarColor=()=>`#${n()}${n()}${n()}`},567:(e,t)=>{var n,r,i,s;Object.defineProperty(t,"__esModule",{value:!0}),t.SortOrderWinner=t.SortWinner=t.Engine=t.Path=void 0,function(e){e.garage="garage",e.engine="engine",e.winners="winners"}(n||(t.Path=n={})),function(e){e.started="started",e.stopped="stopped",e.drive="drive"}(r||(t.Engine=r={})),function(e){e.id="id",e.wins="wins",e.time="time"}(i||(t.SortWinner=i={})),function(e){e.ASC="ASC",e.DESC="DESC"}(s||(t.SortOrderWinner=s={}))},423:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.View=void 0,t.View=class{constructor(e){this.emitter=e}renderElement(e,t,n){const r=document.createElement(e);return t&&(r.className=t),n&&Object.assign(r,n),r}}},796:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Winners=void 0;const r=n(919),i=n(116),s={key:"_limit",value:10};class a extends r.RouteElement{constructor(e){super(e),this.emitter=e,this.url="winners",this.currentWinnerPage=localStorage.getItem("currentPageWinner")?Number(localStorage.getItem("currentPageWinner")):1,this.getAllWinnersPagination(this.currentWinnerPage),this.onSubWin(),this.getWinnersQty()}async getWinnersQty(){const e=await i.ApiWinnersService.getAllWin();this.qtyWins=e.length,this.carsNumbers.textContent=String(this.qtyWins)}appendElement(e){super.render(e),this.nextBtn=super.renderElement("button","next-btn btn win-page-btn",{textContent:"next"}),this.prevBtn=super.renderElement("button","prev-btn btn win-page-btn",{textContent:"prev"});const t=super.renderElement("div","wrapper-page_controller");this.winnnersHeader=super.renderElement("h3","title",{textContent:"Winners #"}),this.carsNumbers=super.renderElement("span","title"),this.pageNumbers=super.renderElement("h4","subtitle-page",{textContent:"Pages(here number)"}),this.tableContainer=super.renderElement("div","table-container"),this.winTableHead=super.renderElement("div","table-head table-row"),this.idWin=super.renderElement("span","table-id-winner",{textContent:"Number"}),this.carImgWin=super.renderElement("span","table-img-winner",{textContent:"Car"}),this.carNameWin=super.renderElement("span","table-name-winner",{textContent:"Name"}),this.numbnerWins=super.renderElement("span","table-numbers-wins",{textContent:"Wins"}),this.timeWin=super.renderElement("span","table-time-wins",{textContent:"Best time"}),this.wrapper.append(this.winnnersHeader,t,this.tableContainer),this.winnnersHeader.append(this.carsNumbers),t.append(this.pageNumbers,this.prevBtn,this.nextBtn),this.tableContainer.append(this.winTableHead),this.winTableHead.append(this.idWin,this.carImgWin,this.carNameWin,this.numbnerWins,this.timeWin),this.nextBtn.addEventListener("click",this.nextPage.bind(this)),this.prevBtn.addEventListener("click",this.prevPage.bind(this))}async getAllWinnersPagination(e=1){this.dataWinners=await i.ApiWinnersService.getPagination(e,s),0===this.dataWinners.length&&(this.currentWinnerPage-=1,this.dataWinners=await i.ApiWinnersService.getPagination(this.currentWinnerPage,s)),this.pageNumbers.textContent=String(this.currentWinnerPage),this.renderWinner(this.dataWinners)}renderWinner(e){this.contentTable=super.renderElement("div","table-content"),this.tableContainer.append(this.contentTable),e.forEach((e=>{const t=super.renderElement("div","table-head table-row"),n=super.renderElement("span","table-id-winner",{textContent:e.id}),r=super.renderElement("span","table-img-winner",{textContent:e.color}),i=super.renderElement("span","table-name-winner",{textContent:e.name}),s=super.renderElement("span","table-numbers-wins",{textContent:e.wins}),a=super.renderElement("span","table-time-wins",{textContent:e.time});r.innerHTML='<svg version="1.0" xmlns="http://www.w3.org/2000/svg"\n    width="1280.000000pt" height="806.000000pt" viewBox="0 0 1280.000000 806.000000"\n    preserveAspectRatio="xMidYMid meet">\n   <g transform="translate(0.000000,806.000000) scale(0.100000,-0.100000)"\n   fill="000000"  stroke="none">\n   <path d="M6845 8050 c-38 -5 -135 -13 -215 -20 -376 -30 -754 -106 -1115 -225\n   -237 -78 -376 -135 -610 -250 -540 -265 -968 -577 -1441 -1050 -254 -254 -407\n   -428 -672 -765 -339 -431 -550 -614 -805 -698 -50 -17 -180 -49 -287 -72 -337\n   -73 -537 -140 -765 -258 -550 -286 -828 -748 -899 -1497 -43 -453 -46 -589\n   -16 -763 52 -304 149 -494 354 -697 122 -122 219 -193 364 -266 l95 -49 180 0\n   180 0 -7 55 c-29 250 -26 448 10 660 113 673 547 1258 1160 1564 908 453 1998\n   218 2641 -570 337 -413 518 -983 474 -1493 -6 -78 -14 -159 -18 -179 l-6 -37\n   1236 0 c680 0 1238 3 1240 7 2 5 -2 55 -9 113 -7 58 -13 163 -14 233 -2 974\n   661 1836 1602 2081 205 54 334 70 553 70 352 0 627 -62 940 -213 558 -270 973\n   -767 1138 -1361 54 -192 70 -318 71 -535 1 -110 -2 -233 -7 -273 l-7 -73 46\n   38 c69 57 177 185 255 301 152 227 241 473 286 792 30 215 22 415 -28 664 -81\n   402 -293 743 -598 963 -2 1 -5 47 -7 100 -4 169 -48 381 -144 698 -122 401\n   -246 659 -497 1028 -214 316 -498 666 -763 940 -102 106 -149 146 -256 216\n   -415 275 -1040 511 -1724 650 -358 73 -691 117 -1085 145 -121 9 -276 20 -345\n   26 -142 11 -381 11 -485 0z m60 -824 c210 -59 384 -203 475 -391 72 -148 73\n   -157 77 -580 5 -414 -7 -727 -32 -851 -30 -146 -100 -259 -189 -307 l-41 -22\n   -1540 -3 c-1145 -2 -1554 0 -1595 9 -121 25 -221 96 -261 182 -24 53 -25 172\n   -3 248 61 205 310 536 693 920 108 107 246 235 306 283 412 330 803 488 1305\n   530 25 2 203 2 395 1 294 -1 360 -4 410 -19z m2060 -91 c152 -34 435 -126 543\n   -176 388 -179 758 -565 982 -1024 146 -300 194 -533 139 -679 -28 -76 -99\n   -139 -186 -166 -63 -19 -92 -20 -991 -20 -924 0 -926 0 -970 21 -51 25 -93 79\n   -119 152 -17 49 -18 107 -18 877 l0 825 23 55 c39 95 78 128 180 151 109 25\n   261 19 417 -16z"/>\n   <path d="M3140 3569 c-718 -69 -1333 -583 -1536 -1285 -51 -174 -66 -310 -62\n   -529 5 -226 25 -344 85 -524 95 -285 238 -508 467 -728 279 -269 600 -421\n   1020 -482 174 -26 238 -26 412 0 355 52 606 152 866 346 343 255 590 642 678\n   1063 63 305 44 631 -55 928 -265 792 -1038 1292 -1875 1211z m359 -939 c201\n   -41 398 -169 516 -335 241 -339 213 -786 -69 -1082 -166 -175 -348 -260 -580\n   -271 -200 -8 -360 35 -517 139 -444 298 -515 911 -150 1302 199 213 506 308\n   800 247z"/>\n   <path d="M9871 3569 c-214 -24 -398 -77 -591 -170 -809 -390 -1201 -1314 -919\n   -2169 189 -575 685 -1030 1274 -1170 108 -26 346 -60 419 -60 81 0 330 37 441\n   65 706 179 1234 772 1330 1492 128 958 -528 1840 -1485 1998 -119 19 -358 27\n   -469 14z m319 -930 c350 -56 635 -330 705 -678 23 -112 16 -294 -15 -401 -67\n   -234 -235 -431 -455 -536 -141 -67 -196 -79 -370 -79 -175 0 -231 13 -371 80\n   -178 86 -313 221 -399 398 -67 139 -79 197 -80 367 0 153 10 210 59 332 107\n   263 365 470 648 517 75 12 202 13 278 0z"/>\n   </g>\n   </svg>\n   ',r.style.fill=e.color,this.contentTable.append(t),t.append(n,r,i,s,a)}))}async nextPage(){const e=this.qtyWins/s.value;if(this.currentWinnerPage<e){this.nextBtn.disabled=!1,this.prevBtn.disabled=!1,this.currentWinnerPage+=1,localStorage.setItem("currentPageWinner",String(this.currentWinnerPage)),this.pageNumbers.textContent=String(this.currentWinnerPage),this.contentTable.innerHTML="";const e=await this.getAllWinnersPagination(this.currentWinnerPage);console.log(e)}else this.nextBtn.disabled=!0}async prevPage(){this.currentWinnerPage>1?(this.prevBtn.disabled=!1,this.nextBtn.disabled=!1,this.currentWinnerPage-=1,localStorage.setItem("currentPageWinner",String(this.currentWinnerPage)),this.pageNumbers.textContent=String(this.currentWinnerPage),this.contentTable.innerHTML="",await this.getAllWinnersPagination(this.currentWinnerPage)):this.prevBtn.disabled=!0}onSubWin(){this.emitter.subscribe("onRemove",(e=>this.onRemoveWin(e))),this.emitter.subscribe("renderWinners",(()=>{this.contentTable.innerHTML="",this.getAllWinnersPagination(this.currentWinnerPage)}))}async onRemoveWin(e){if(e){const{id:t}=e,n=(await i.ApiWinnersService.getAllWin()).find((e=>e.carId===t));console.log("winnerToDelete",n),n&&await i.ApiWinnersService.deleteWin(n.id),this.getWinnersQty(),this.contentTable.innerHTML="",this.getAllWinnersPagination(this.currentWinnerPage)}}}t.Winners=a}},t={};function n(r){var i=t[r];if(void 0!==i)return i.exports;var s=t[r]={exports:{}};return e[r](s,s.exports,n),s.exports}(()=>{const e=n(77),t=new(n(504).EventEmitter);new e.App(t).appendElement(document.body)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,